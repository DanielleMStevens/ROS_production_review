my_ggplot_theme +
ylim(0,100) +
xlab("/nPosition") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240, 270),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920, 950))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlab(/n"Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240, 270),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920, 950))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240, 270),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920, 950))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,920), expand = c(0,0))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
AtRBODH_Cterm_highlight_region
reticulate::repl_python()
## alternate method
hold_file <- Biostrings::readAAStringSet(filepath = file.choose(), format = "fasta") #NADPH_oxidase_homologs.fasta
holdSeq2 <- dss2df(hold_file)
reference_AtRBOHD <- holdSeq2[grepl("AtRBOHD",holdSeq2$names),3]
AtRBODH_Cterm_highlight_region <- substr(reference_AtRBOHD,680,1000)
holdBlast_hits <- Biostrings::readAAStringSet(filepath = file.choose(), format = 'fasta') #c-term-hits.fasta
holdBlast_hits <- dss2df(holdBlast_hits)
rownames(holdBlast_hits) <- NULL
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("") +
theme(axis.text.x = element_text(angle = 45))
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("") +
theme(axis.text.x = element_text(angle = 90))
hold_local_global_Scores <- data.frame("Full Length" = as.numeric(), "C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
hold_local_global_Scores <- data.frame("Full Length" = as.numeric(), "C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
melt_hold_local_global_Scores
hold_local_global_Scores <- data.frame("Full Length" = as.numeric(), "C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
hold_local_global_Scores
# alter data to plot
colnames(hold_local_global_Scores) <- c("Full Length","C-terminus")
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
install.packages("postscriptFonts")
library(extrafont)
loadfonts(device = "pdf", quiet = FALSE)
source("./Theme_ggplot.R")
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
system("mafft --thread 12 --maxiterate 1000 --localpair C-term-hits-fixed.fasta > 'C-term-hits_alignment'")
calculate_sim_scan_score <- function(sequence_in, window_size){
hold_scores <- list()
for (j in 1:nchar(sequence_in)){
if((j + window_size) <= nchar(sequence_in)){
test_seq_window <- substr(sequence_in, j, (j + window_size))
alignment_match <- pairwiseAlignment(holdBlast_hits[1,3], test_seq_window, type = 'local-global')
hold_scores[[j]] <- pid(alignment_match)
}
}
hold_scores <- unlist(hold_scores)
return(hold_scores)
}
#### Def
hold_data_v2 <- data.frame("Position" = seq(1:300))
pb = txtProgressBar(min = 0, max = nrow(holdBlast_hits), initial = 0, style = 3)
for (i in 2:nrow(holdBlast_hits)){
save <- data.frame(c(calculate_sim_scan_score_v2(holdBlast_hits[i,3],20),
c(rep(NA,
(nrow(hold_data_v2)-length(calculate_sim_scan_score_v2(holdBlast_hits[i,3],20)))))))
colnames(save) <- holdBlast_hits[i,2]
hold_data_v2 <- cbind(hold_data_v2, save)
setTxtProgressBar(pb, i)
}
hold_data_melt2 <- melt(hold_data_v2, id = c("Position"))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
holdBlast_hits <- Biostrings::readAAStringSet(filepath = file.choose(), format = 'fasta') #c-term-hits.fasta
holdBlast_hits <- dss2df(holdBlast_hits)
rownames(holdBlast_hits) <- NULL
hold_local_global_Scores <- data.frame("Full Length" = as.numeric(), "C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
# alter data to plot
colnames(hold_local_global_Scores) <- c("Full Length","C-terminus")
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
#### Def
hold_data_v2 <- data.frame("Position" = seq(1:300))
pb = txtProgressBar(min = 0, max = nrow(holdBlast_hits), initial = 0, style = 3)
for (i in 2:nrow(holdBlast_hits)){
save <- data.frame(c(calculate_sim_scan_score_v2(holdBlast_hits[i,3],20),
c(rep(NA,
(nrow(hold_data_v2)-length(calculate_sim_scan_score_v2(holdBlast_hits[i,3],20)))))))
colnames(save) <- holdBlast_hits[i,2]
hold_data_v2 <- cbind(hold_data_v2, save)
setTxtProgressBar(pb, i)
}
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
hold_data_melt2 <- melt(hold_data_v2, id = c("Position"))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
hold_data_melt2 <- melt(hold_data_v2, id = c("Position"))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
View(hold_data_v3)
View(hold_data_v2)
to_remove <- c("NADPH_oxidase_Lentinus_tigrinus_ALCF2SS17_RPD76160_1",
"NADPH_oxidase_Lentinus_tigrinus_ALCF2SS16_RPD61587_1",
"NADPH_oxidase_Obba_rivulosa_OCH90477_1",
"NOX5_HUMAN_isoform_1",
"CsRBOHB_like_Chlorella_sorokiniana")
library(tidyr)
dplyr
library(dplyr)
select(hold_data_v2, to_remove)
subset_test <- melt(select(hold_data_v2, to_remove), id =c("Position"))
to_remove <- c("Position",
"NADPH_oxidase_Lentinus_tigrinus_ALCF2SS17_RPD76160_1",
"NADPH_oxidase_Lentinus_tigrinus_ALCF2SS16_RPD61587_1",
"NADPH_oxidase_Obba_rivulosa_OCH90477_1",
"NOX5_HUMAN_isoform_1",
"CsRBOHB_like_Chlorella_sorokiniana")
subset_test <- melt(select(hold_data_v2, to_remove), id =c("Position"))
subset_test
ggplot(subset_test, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
subset_test <- melt(hold_data_v2[,!to_remove], id =c("Position"))
subset_test <- melt(hold_data_v2[!to_remove], id =c("Position"))
subset_test <- melt(hold_data_v2[!c("NADPH_oxidase_Lentinus_tigrinus_ALCF2SS17_RPD76160_1",
"NADPH_oxidase_Lentinus_tigrinus_ALCF2SS16_RPD61587_1",
"NADPH_oxidase_Obba_rivulosa_OCH90477_1",
"NOX5_HUMAN_isoform_1",
"CsRBOHB_like_Chlorella_sorokiniana")], id =c("Position"))
hold_data_melt2
subset_test <- melt(select(hold_data_v2, -to_remove), id =c("Position"))
subset_test <- melt(select(hold_data_v2, -(to_remove)), id =c("Position"))
str(hold_data_v2)
subset_test <- select(hold_data_v2, -to_remove)
str(subset_test)
to_remove <- c("NADPH_oxidase_Lentinus_tigrinus_ALCF2SS17_RPD76160_1",
"NADPH_oxidase_Lentinus_tigrinus_ALCF2SS16_RPD61587_1",
"NADPH_oxidase_Obba_rivulosa_OCH90477_1",
"NOX5_HUMAN_isoform_1",
"CsRBOHB_like_Chlorella_sorokiniana")
subset_test <- melt(select(hold_data_v2, -(to_remove)), id =c("Position"))
ggplot(subset_test, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
mean(hold_local_global_Scores$`Full Length`)
mean(hold_local_global_Scores$`C-terminus`)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes(x = -Inf, y = Inf, linetype = mean(hold_local_global_Scores$`Full Length`) ), mean(hold_local_global_Scores$`Full Length`))
cutoff <- data.frame( x = c(-Inf, Inf), y = 52, cutoff = factor(52) )
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes( x, y, linetype = cutoff ), cutoff)
mean(hold_local_global_Scores$`C-terminus`)
cutoff <- data.frame( x = c(-Inf, Inf), y = 59, cutoff = factor(59) )
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes( x, y, linetype = cutoff ), cutoff)
ggplot(subset_test, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes( x, y, linetype = cutoff ), cutoff)
ggplot(subset_test, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes( x, y, linetype = cutoff ), cutoff) +
geom_line(aes( x, y, linetype = cutoff2 ), cutoff2)
cutoff2 <- data.frame( x = c(-Inf, Inf), y = 52, cutoff2 = factor(52) )
ggplot(subset_test, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes( x, y, linetype = cutoff ), cutoff) +
geom_line(aes( x, y, linetype = cutoff2 ), cutoff2)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes( x, y, linetype = cutoff ), cutoff) +
geom_line(aes( x, y, linetype = cutoff2 ), cutoff2)
ggplot(subset_test, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0)) +
geom_line(aes( x, y, linetype = cutoff ), cutoff) +
geom_line(aes( x, y, linetype = cutoff2 ), cutoff2)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 20, xmax = 28, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 179, xmax = 187, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 229, xmax = 237, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
reticulate::repl_python()
