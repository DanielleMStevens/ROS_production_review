#colnames(hold_data_v3)[1] <- c("Position")
#hold_data_melt_v3 <- melt(hold_data_v3, id = c("Position"))
ggplot(hold_data_v3, aes(x = start.point, y = score)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y = score), fun = mean, colour="blue", geom="line", size = 1)
plot_trial <- ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
ggplot(hold_data_melt, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="blue", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
#colnames(hold_data_v3)[1] <- c("Position")
#hold_data_melt_v3 <- melt(hold_data_v3, id = c("Position"))
ggplot(hold_data_v3, aes(x = start.point, y = score)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y = score), fun = mean, colour="blue", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
library(Biostrings)
library(seqinr)
library(ggmsa)
source("./Theme_ggplot.R")
calculate_sim_score <- function(full_sequence_in, blast_hit_in){
seq_global <- Biostrings::pairwiseAlignment(reference_AtRBOHD, full_sequence_in, type = 'global', substitutionMatrix = "BLOSUM62")
seq_local <- Biostrings::pairwiseAlignment(AtRBODH_Cterm_highlight_region, blast_hit_in, type = 'global', substitutionMatrix = "BLOSUM62")
my_list <- data.frame("Full Length RBOHD" = pid(seq_global, "PID1"), "RBOHD C-terminus" = pid(seq_local, "PID1"))
return(my_list)
}
## alternate method
hold_file <- Biostrings::readAAStringSet(filepath = file.choose(), format = "fasta")
holdSeq2 <- dss2df(hold_file)
reference_AtRBOHD <- holdSeq2[grepl("AtRBOHD",holdSeq2$names),3]
AtRBODH_Cterm_highlight_region <- substr(reference_AtRBOHD,680,1000)
holdBlast_hits <- Biostrings::readAAStringSet(filepath = file.choose(), format = 'fasta') #c-term-hits.fasta
holdBlast_hits <- dss2df(holdBlast_hits)
rownames(holdBlast_hits) <- NULL
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
#next
longest <- max(nchar(find_blast_hit_seq$seq))
holdseq <- find_blast_hit_seq[which(nchar(find_blast_hit_seq$seq) == longest),3]
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], holdseq))
}
}
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
library(reshape2)
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(40,98) +
xlab("")
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(40,98) +
xlab("")
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
holdBlast_hits[grepl(holdSeq2[2,2], holdBlast_hits$names),]
holdSeq2[2,2]
View(holdBlast_hits)
holdBlast_hits[94,]
holdBlast_hits[94,2]
grepl(holdSeq2[2,2], holdBlast_hits$names)
grep(holdSeq2[2,2], holdBlast_hits$names)
grepl(holdSeq2[2,2], holdBlast_hits[94,])
grepl(holdSeq2[2,2], holdBlast_hits[94,2])
grep(holdSeq2[2,2], holdBlast_hits$names, fixed = TRUE)
grepl(holdSeq2[2,2], holdBlast_hits$names, fixed = TRUE)
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names),]
if (nrow(find_blast_hit_seq) == 0){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
library(Biostrings)
library(seqinr)
library(ggmsa)
library(reshape2)
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names),]
if (nrow(find_blast_hit_seq) == 0){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names),]
if (nrow(find_blast_hit_seq) == 0){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
print(find_blast_hit_seq)
#hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names),]
if (nrow(find_blast_hit_seq) == 0){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
print(i)
#hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
holdBlast_hits[36]
holdBlast_hits[36,]
holdBlast_hits[grepl(holdSeq2[36,2], holdBlast_hits$names),]
holdBlast_hits[42,]
holdBlast_hits[grepl(holdSeq2[36,2], holdBlast_hits$names, fixed = T),]
grepl(holdSeq2[36,2], holdBlast_hits$names, fixed = T)
holdSeq2[36,2]
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
print(i)
#hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
source("./Theme_ggplot.R")
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
holdBlast_hits$names %in% holdSeq2[36,2]
holdSeq2[36,2]
holdBlast_hits$names %in% holdSeq2[42,2]
holdSeq2[42,2]
hold_local_global_Scores <- data.frame("Full Length RBOHD" = as.numeric(), "RBOHD C-terminus" = as.numeric())
for (i in 1:nrow(holdSeq2)){
find_blast_hit_seq <- holdBlast_hits[grepl(holdSeq2[i,2], holdBlast_hits$names, fixed = TRUE),]
if (nrow(find_blast_hit_seq) == 0){
next
}
if (nrow(find_blast_hit_seq) == 1){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[,3]))
}
if (nrow(find_blast_hit_seq) > 1){
for (j in 1:nrow(find_blast_hit_seq)){
hold_local_global_Scores <- rbind(hold_local_global_Scores, calculate_sim_score(holdSeq2[i,3], find_blast_hit_seq[j,3]))
}
}
}
melt_hold_local_global_Scores <- melt(hold_local_global_Scores)
# plot data
ggplot(melt_hold_local_global_Scores, aes(x = variable, y = value)) +
geom_boxplot(fill = "grey60", alpha = 0.6, outlier.alpha = 0) +
geom_jitter(fill = "black", alpha = 0.4, width = 0.2) +
my_ggplot_theme +
ylab("Percent Similarity\n") +
ylim(0,98) +
xlab("")
#colnames(hold_data_v3)[1] <- c("Position")
#hold_data_melt_v3 <- melt(hold_data_v3, id = c("Position"))
ggplot(hold_data_v3, aes(x = start.point, y = score)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y = score), fun = mean, colour="blue", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
ggplot(hold_data_melt, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="blue", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
#colnames(hold_data_v3)[1] <- c("Position")
#hold_data_melt_v3 <- melt(hold_data_v3, id = c("Position"))
ggplot(hold_data_v3, aes(x = start.point, y = score)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,250) +
stat_summary(aes(y = score), fun = mean, colour="blue", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,242) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,242) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = 0, 30, 60, 90, 120, 150, 180, 210, 240,
labels = c(680, 710,740,770, 800, 830, 860, 890))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,242) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = 0, 30, 60, 90, 120, 150, 180, 210, 240,
labels = c(680, 710,740,770, 800, 830, 860, 890, 920))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,242) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = (0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,242) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,242) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlim(0,242) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920)) +
xlim(0,242)
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240, 270),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920, 950))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlab("/nPosition") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240, 270),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920, 950))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
xlab(/n"Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240, 270),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920, 950))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240, 270),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920, 950))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,920), expand = c(0,0))
ggplot(hold_data_melt2, aes(x = Position, y = value)) +
geom_rect(aes(xmin = 21, xmax = 27, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 180, xmax = 186, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
geom_rect(aes(xmin = 230, xmax = 236, ymin = -Inf, ymax = Inf), fill = "light grey", alpha = 0.01) +
my_ggplot_theme +
ylim(0,100) +
ylab("Percent Similarity\n") +
xlab("Position") +
stat_summary(aes(y= value), fun = mean, colour="red", geom="line", size = 1) +
scale_x_continuous(breaks = c(0, 30, 60, 90, 120, 150, 180, 210, 240),
labels = c(680, 710,740,770, 800, 830, 860, 890, 920),
limits = c(0,240), expand = c(0,0))
AtRBODH_Cterm_highlight_region
reticulate::repl_python()
